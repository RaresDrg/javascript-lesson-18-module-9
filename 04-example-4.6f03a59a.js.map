{"mappings":"YAIA,IAAMA,EAAgBC,SAASC,eAAe,iBAE9B,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACTF,EAAQ,CACNG,OAAQ,KACRC,QAAS,mB,GAMV,I,IAIFC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZV,EAAca,UAAY,OAA8BC,OAAvBJ,EAAMH,OAAO,YAAwBO,OAAdJ,EAAMF,QAAQ,O,IAEvEO,OAAM,SAAAC,GACLL,QAAQC,IAAII,GACZhB,EAAca,UAAY,OAA8BC,OAAvBE,EAAMT,OAAO,YAAwBO,OAAdE,EAAMR,QAAQ,O","sources":["src/js/04-example-4.js"],"sourcesContent":["/*  \n  Example 4 :\n*/\n\nconst statusMessage = document.getElementById('statusMessage');\n\nconst promise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    resolve({\n      status: 'ok',\n      message: 'Totul a fost ok',\n    });\n    // reject({\n    //     status: 'error',\n    //     message: 'A aparut o eroare'\n    // })\n  }, 2000);\n});\n\npromise\n  .then(value => {\n    console.log(value);\n    statusMessage.innerHTML = `<h1>${value.status}</h1><p>${value.message}</p>`;\n  })\n  .catch(error => {\n    console.log(error);\n    statusMessage.innerHTML = `<h1>${error.status}</h1><p>${error.message}</p>`;\n  });\n"],"names":["$f27f3f4ce8ce0b5d$var$statusMessage","document","getElementById","Promise","resolve","reject","setTimeout","status","message","then","value","console","log","innerHTML","concat","catch","error"],"version":3,"file":"04-example-4.6f03a59a.js.map"}
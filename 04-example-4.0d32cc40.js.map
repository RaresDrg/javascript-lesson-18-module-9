{"mappings":"AAIA,MAAMA,EAAgBC,SAASC,eAAe,iBAE9B,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACTF,EAAQ,CACNG,OAAQ,KACRC,QAAS,mBACT,GAKD,IAAK,IAIPC,MAAKC,IACJC,QAAQC,IAAIF,GACZV,EAAca,UAAY,OAAOH,EAAMH,iBAAiBG,EAAMF,aAAa,IAE5EM,OAAMC,IACLJ,QAAQC,IAAIG,GACZf,EAAca,UAAY,OAAOE,EAAMR,iBAAiBQ,EAAMP,aAAa","sources":["src/js/04-example-4.js"],"sourcesContent":["/*  \n  Example 4 :\n*/\n\nconst statusMessage = document.getElementById('statusMessage');\n\nconst promise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    resolve({\n      status: 'ok',\n      message: 'Totul a fost ok',\n    });\n    // reject({\n    //     status: 'error',\n    //     message: 'A aparut o eroare'\n    // })\n  }, 2000);\n});\n\npromise\n  .then(value => {\n    console.log(value);\n    statusMessage.innerHTML = `<h1>${value.status}</h1><p>${value.message}</p>`;\n  })\n  .catch(error => {\n    console.log(error);\n    statusMessage.innerHTML = `<h1>${error.status}</h1><p>${error.message}</p>`;\n  });\n"],"names":["$758b3efe5e287afd$var$statusMessage","document","getElementById","Promise","resolve","reject","setTimeout","status","message","then","value","console","log","innerHTML","catch","error"],"version":3,"file":"04-example-4.0d32cc40.js.map"}
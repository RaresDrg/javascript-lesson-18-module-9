{"mappings":"YAIAA,QAAQC,IAAI,mBAEZ,IAAMC,EAAU,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACTN,QAAQC,IAAI,qBAEZ,IAAMM,EAAO,CACXC,GAAI,EACJC,KAAM,6BACNC,OAAQ,aAGLH,EAAKC,IACRH,EAAO,IAAIM,MAAM,WAEnBP,EAAQG,E,GACP,I,IAGLP,QAAQC,IAAI,wBAEZD,QAAQC,IAAIC,GAEZA,EACGU,MAAK,SAAAL,GAGJ,OAFAP,QAAQC,IAAI,gBACZM,EAAKG,OAAS,WACPH,C,IAERK,MAAK,SAAAL,G,OAAQP,QAAQC,IAAIM,E,IACzBM,OAAM,SAAAC,G,OAAOd,QAAQe,MAAMD,E,IAC3BE,SAAQ,W,OAAMhB,QAAQC,IAAI,c","sources":["src/js/05-example-5.js"],"sourcesContent":["/*  \n  Example 5: Promises chaining\n*/\n\nconsole.log('Request data...');\n\nconst promise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    console.log('Preparing data...');\n\n    const data = {\n      id: 1,\n      text: 'lorem ipsum dolor sit amet',\n      status: 'important',\n    };\n\n    if (!data.id) {\n      reject(new Error('No id!'));\n    }\n    resolve(data);\n  }, 2000);\n});\n\nconsole.log('Cod de executat dupa');\n\nconsole.log(promise);\n\npromise\n  .then(data => {\n    console.log('Data changed');\n    data.status = 'ordinary';\n    return data;\n  })\n  .then(data => console.log(data))\n  .catch(err => console.error(err))\n  .finally(() => console.log('Promise end'))\n;"],"names":["console","log","$a489f274fb599f58$var$promise","Promise","resolve","reject","setTimeout","data","id","text","status","Error","then","catch","err","error","finally"],"version":3,"file":"05-example-5.92b4a627.js.map"}
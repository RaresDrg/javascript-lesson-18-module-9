{"mappings":"AAIAA,QAAQC,IAAI,mBAEZ,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACTN,QAAQC,IAAI,qBAEZ,MAAMM,EAAO,CACXC,GAAI,EACJC,KAAM,6BACNC,OAAQ,aAGLH,EAAKC,IACRH,EAAO,IAAIM,MAAM,WAEnBP,EAAQG,EAAK,GACZ,IAAK,IAGVP,QAAQC,IAAI,wBAEZD,QAAQC,IAAIC,GAEZA,EACGU,MAAKL,IACJP,QAAQC,IAAI,gBACZM,EAAKG,OAAS,WACPH,KAERK,MAAKL,GAAQP,QAAQC,IAAIM,KACzBM,OAAMC,GAAOd,QAAQe,MAAMD,KAC3BE,SAAQ,IAAMhB,QAAQC,IAAI","sources":["src/js/05-example-5.js"],"sourcesContent":["/*  \n  Example 5: Promises chaining\n*/\n\nconsole.log('Request data...');\n\nconst promise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    console.log('Preparing data...');\n\n    const data = {\n      id: 1,\n      text: 'lorem ipsum dolor sit amet',\n      status: 'important',\n    };\n\n    if (!data.id) {\n      reject(new Error('No id!'));\n    }\n    resolve(data);\n  }, 2000);\n});\n\nconsole.log('Cod de executat dupa');\n\nconsole.log(promise);\n\npromise\n  .then(data => {\n    console.log('Data changed');\n    data.status = 'ordinary';\n    return data;\n  })\n  .then(data => console.log(data))\n  .catch(err => console.error(err))\n  .finally(() => console.log('Promise end'))\n;"],"names":["console","log","$5760f7fd8594e891$var$promise","Promise","resolve","reject","setTimeout","data","id","text","status","Error","then","catch","err","error","finally"],"version":3,"file":"05-example-5.bc68dbda.js.map"}